<?xml version='1.0' encoding='UTF-8'?>
<MotionPlanning warnings="true" warningsAsErrors="true" print="false">

  <!-- Here we specify input files, such as environment and query. The
       'baseFilename in the Problem node is for Simulator stat output only. -->
  <Problem baseFilename="tmp_examples">

    <Environment filename="factory_patrol.env"
      frictionCoefficient="0" gravity="0 0 0"/>

    <Robot label="robot1" filename="boxy.robot">
      <Agent type="planning"/>
    </Robot>

    <!--Robot label="coordinator" virtual="true" filename="boxy.robot" manipulator="false">
      <Agent type="coordinator" dmLabel="minkowski" debug="true">
        <Member label="robot1"/>
      </Agent>
    </Robot-->

    <RobotGroup label="robotGroup" robotLabels="robot1"/>

    <GroupTask label="groupQuery" group="robotGroup">
      <Task label="patrol" robot="robot1">
        <StartConstraints>
          <CSpaceConstraint point="0.5   5.0   0"/>
        </StartConstraints>
        <GoalConstraints>
          <CSpaceConstraint point="2.75  5.0   0"/>
          <CSpaceConstraint point="3.0   3.0  -0.5"/>
          <CSpaceConstraint point="3.5   1.75  0"/>
          <CSpaceConstraint point="8.0   1.75  0"/>
          <CSpaceConstraint point="8.0   1.75  1"/>
          <CSpaceConstraint point="3.0   1.75  1"/>
          <CSpaceConstraint point="3.0   3.0   0.5"/>
          <CSpaceConstraint point="2.75  5.0   1"/>
          <CSpaceConstraint point="0.5   5.0   1"/>
        </GoalConstraints>
      </Task>
    </GroupTask>


    <!--Task label="coordinatorTask" robot="coordinator">
      <StartConstraints>
        <CSpaceConstraint point="0 0 0"/>
      </StartConstraints>
    </Task-->

    <!--Decomposition label="main" taskLabel="top" coordinator="coordinator">
	    <SemanticTask label="top" subtaskRelation="AND"/>
      <SemanticTask label="patrol" parent="top" decomposable="false" fixedAllocation="true">
        <GroupTask label="groupQuery" group="robotGroup">
          <Task label="patrol" robot="robot1">
            <StartConstraints>
              <CSpaceConstraint point="0.5   5.0   0"/>
            </StartConstraints>
            <GoalConstraints>
              <CSpaceConstraint point="2.75  5.0   0"/>
              <CSpaceConstraint point="3.0   3.0  -0.5"/>
              <CSpaceConstraint point="3.5   1.75  0"/>
              <CSpaceConstraint point="8.0   1.75  0"/>
              <CSpaceConstraint point="8.0   1.75  1"/>
              <CSpaceConstraint point="3.0   1.75  1"/>
              <CSpaceConstraint point="3.0   3.0   0.5"/>
              <CSpaceConstraint point="2.75  5.0   1"/>
              <CSpaceConstraint point="0.5   5.0   1"/>
            </GoalConstraints>
          </Task>
        </GroupTask>
      </SemanticTask>
    </Decomposition-->
  </Problem>

  <!-- Set available algorithms and parameters. -->
  <Library>

    <DistanceMetrics>
      <Euclidean label="euclidean"/>
      <Minkowski label="minkowski" r1="3.0" r2="3.0" r3="0.333"
        normalize="false"/>
      <Manhattan label="manhattan"/>
    </DistanceMetrics>

    <ValidityCheckers>
      <CollisionDetection label="bounding" method="BoundingSpheres"/>
      <AlwaysTrueValidity label="alwaysTrue"/>
      <CollisionDetection label="rapid" method="RAPID"/>
      <CollisionDetection label="pqp" method="PQP"/>
      <CollisionDetection label="pqp_solid" method="PQP_SOLID"/>
    </ValidityCheckers>

    <NeighborhoodFinders>
      <BruteForceNF label="Nearest" dmLabel="euclidean" unconnected="false"
        k="1"/>
      <BruteForceNF label="BFNF" dmLabel="euclidean" unconnected="true"
        k="5"/>
    </NeighborhoodFinders>

    <Samplers>
      <UniformRandomSampler label="UniformRandom" vcLabel="alwaysTrue"/>
      <UniformRandomSampler label="UniformRandomFree" vcLabel="pqp_solid"/>
    </Samplers>

    <LocalPlanners>
      <StraightLine label="sl" binaryEvaluation="true" vcLabel="pqp_solid" dmLabel="euclidean"/>
    </LocalPlanners>

    <Extenders>
      <BasicExtender label="BERO" debug="false" dmLabel="euclidean"
        vcLabel="pqp_solid" maxDist="4." minDist=".01"/>
    </Extenders>

    <PathModifiers>
    </PathModifiers>

    <Connectors>
      <NeighborhoodConnector label="Closest" debug="false"
        nfLabel="BFNF" lpLabel="sl" checkIfSameCC="false"/>
      <RewireConnector label="Rewire" nfLabel="BFNF" lpLabel="sl"/>
    </Connectors>

    <Metrics>
    </Metrics>

    <MapEvaluators>
      <QueryMethod label="Query" debug="false"
        graphSearchAlg="dijkstras"/>
      <GroupQuery label="CompositeQuery"/>
      <GroupDecoupledQuery label="DecoupledQuery" queryLabel="Query"
        debug="false" ignoreOtherRobots="true"/>
    </MapEvaluators>

    <MPStrategies>
      <AdaptiveRRT label="AdaptiveRRT" debug="true"
        querySampler="UniformRandom" samplerLabel="UniformRandom"
        nfLabel="Nearest" extenderLabel="BERO"
        growGoals="false" growthFocus="0.01" m="1"
        goalDmLabel="minkowski" goalThreshold="5"
        wallPenalty=0.5 gamma=0.5 cost="reward">

        <GrowthSet threshold="0.0">
          <Extender label="BERO"/>
        </GrowthSet>
        <Evaluator label="QueryMethod"/>
      </AdaptiveRRT>

      <BasicRRTStrategy label="RRT" debug="false"
        querySampler="UniformRandomFree" samplerLabel="UniformRandomFree"
        nfLabel="Nearest" extenderLabel="BERO"
        growGoals="false" growthFocus="0.01" m="1"
        goalDmLabel="euclidean" goalThreshold="5">
        <Evaluator label="Query"/>
      </BasicRRTStrategy>

      <!-- RRT Star -->
      <BasicRRTStrategy label="RRTstar" debug="false"
        querySampler="UniformRandomFree" samplerLabel="UniformRandomFree"
        nfLabel="Nearest" extenderLabel="BERO"
        growGoals="false" growthFocus="0.01" m="1"
        goalDmLabel="euclidean" goalThreshold="5" connectorLabel="Rewire">
        <Evaluator label="Query"/>
      </BasicRRTStrategy>

      <!-- Toggle PRM-->
      <TogglePRMStrategy label="TogglePRM" vcLabel="pqp_solid" priority="true">
        <Sampler label="UniformRandomFree" number="10" attempts="1"/>
        <Connector label="Closest"/>
        <ColConnector label="Closest"/>
        <Evaluator label="Query"/>
      </TogglePRMStrategy>
      
      <!-- Basic PRM where num samples is based on Number -->
      <BasicPRM label="BasicPRM" debug="false" querySampler="UniformRandomFree">
        <Sampler label="UniformRandomFree" number="10" attempts="1"/>
        <Connector label="Closest"/>
        <Evaluator label="Query"/>
      </BasicPRM>

      <GroupPRM label="CompositePRM" modeSampling="true" writeOutput="true">
        <Connector label="Closest"/>
        <Sampler label="UniformRandomFree" number="10" attempts="1"/>
        <Evaluator label="CompositeQuery"/>
      </GroupPRM>

      <GroupDecoupledStrategy label="DecoupledPRM" strategyLabel="BasicPRM" writeOutput="true">
        <Evaluator label="DecoupledQuery"/>
      </GroupDecoupledStrategy>
    </MPStrategies>

    <MPTools>
    </MPTools>

    <!-- MPProblem allows multiple solvers to be specified and executed. -->

    <Solver mpStrategyLabel="DecoupledPRM" seed="12345678"
      baseFilename="patrol" vizmoDebug="false"/> 

  </Library>

  <TMPLibrary>
    <TMPStrategies>
      <SimpleMotionMethod label="SimpleMotion" teLabel="MotionEval"/>
      <SimpleTaskAllocationMethod label="SimpleAllocator" taLabel="GreedyAllocator"/>
    </TMPStrategies>

    <PoIPlacementMethods>
    </PoIPlacementMethods>

    <TaskEvaluators>
      <SimpleMotionEvaluator label="MotionEval"/>
    </TaskEvaluators>

    <TaskDecomposers>
    </TaskDecomposers>

    <TaskAllocators>
      <GreedyAllocator label="GreedyAlloc" reset="true" debug="true"/>
      <SmartAllocator label="SmartAllocator" reset="true" debug="true"/>
    </TaskAllocators>

    <StateGraphs>
    </StateGraphs>

    <TMPTools>
    </TMPTools>

    <!--Solver tmpStrategyLabel="SimpleAllocator" baseFilename="tmp_examples"/-->
    <Solver tmpStrategyLabel="SimpleMotion" baseFilename="tmp_examples"/>
  </TMPLibrary>

</MotionPlanning>
